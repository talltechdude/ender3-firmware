name: Build Firmware

on:
  push:
    branches:
      - main

jobs:
  refs:
    name: Prepare CI Vars
    runs-on: ubuntu-18.04
    outputs:
      sha_short: ${{ steps.refs.outputs.sha_short }}
      short_ref: ${{ steps.refs.outputs.short_ref }}
      version: ${{ steps.refs.outputs.version }}
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v2
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          dry_run: true
          semantic_version: 17.4.4
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set outputs
        id: refs
        run: |
          export BRANCH=${GITHUB_REF#refs/*/}
          echo "branch: ${BRANCH}"
          export BRANCHTRANSLATED=$(echo ${BRANCH} | tr '/' '_')
          echo "short_ref: ${BRANCHTRANSLATED}"
          export VERSION=""
          if ${{ steps.semantic.outputs.new_release_published == 'true' }}; then
            export VERSION=${{ steps.semantic.outputs.new_release_version }}
          else
            export VERSION=${BRANCHTRANSLATED}
          fi
          echo "New semantic release: ${{ steps.semantic.outputs.new_release_published }}"
          echo "version: ${VERSION}"
          echo "::set-output name=short_ref::${BRANCHTRANSLATED}"
          echo "::set-output name=sha_short::SHA-$(git rev-parse --short=12 HEAD)"
          echo "::set-output name=version::${VERSION}"

  compile:
    name: Compile Marlin Firmware
    runs-on: ubuntu-latest
    needs: refs
    if: ${{ needs.refs.outputs.new_release_published == 'true' }}
    steps:
    - uses: actions/checkout@v2
    - name: Checkout upstream firmware
      uses: actions/checkout@v2
      with:
        repository: th3dstudio/UnifiedFirmware
        ref: 2.27
        path: upstream

    # with:
      #   repository: talltechdude/ender3-firmware
    # - run: |
    #     pwd
    #     ls -al
    #     ls -al upstream/
    - name: Prepare custom config
      run: |
        # pwd
        # ls -al ../
        # ls -al
        cp "upstream/Board Configuration Files/TH3D_EZBoardLite/Firmware/platformio.ini" upstream/Firmware/
        cat Configuration_pre.h "upstream/Board Configuration Files/TH3D_EZBoardLite/Firmware/Marlin/Configuration.h" Configuration_post.h > upstream/Firmware/Marlin/Configuration.h
        # ls -al upstream/Firmware
        # ls -al upstream/Firmware/Marlin/
        # cat upstream/Firmware/Marlin/Configuration.h

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO
      run: pio run
      working-directory: ./upstream/Firmware
    - uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: ./upstream/Firmware/.pioenvs/LPC1769/firmware.bin
        if-no-files-found: error
        retention-days: 5

  release:
    name: Release firmware binary
    runs-on: ubuntu-latest
    needs: [ refs, compile ]
    if: ${{ needs.refs.outputs.new_release_published == 'true' }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: firmware

      - name: Run Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          dry_run: false
          semantic_version: 17.4.4
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Echo Semantic Release Versions
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}
      # - name: Source checkout
      #   uses: actions/checkout@v2          
      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: firmware.bin